---
apiVersion: v1
kind: Namespace
metadata:
  name: tracing
---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger-collector
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: collector
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "14268"
      spec:
        containers:
        - image: jaegertracing/jaeger-collector:1.11.0
          name: jaeger-collector
          args: ["--sampling.strategies-file=/conf/sampling-strategies.json",]
          ports:
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 14269
          volumeMounts:
          - name: jaeger-configuration-volume
            mountPath: /conf
          env:
          - name: SPAN_STORAGE_TYPE
            value: elasticsearch
          - name: ES_SERVER
            valueFrom:
              configMapKeyRef:
                name: host-info
                key: data01
          - name: ES_SERVER_URLS
            value: http://$(ES_SERVER):9200
        volumes:
          - configMap:
              name: jaeger-configuration
              items:
                - key: sampling-strategies
                  path: sampling-strategies.json
            name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-collector
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  spec:
    ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: zipkin
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: zipkin
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger-query
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: query
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "16686"
      spec:
        containers:
        - image: jaegertracing/jaeger-query:1.11.0
          name: jaeger-query
          ports:
          - containerPort: 16686
            protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 16687
          env:
          - name: QUERY_BASE_PATH
            value: /tracing
          - name: SPAN_STORAGE_TYPE
            value: elasticsearch
          - name: ES_SERVER
            valueFrom:
              configMapKeyRef:
                name: host-info
                key: data01
          - name: ES_SERVER_URLS
            value: http://$(ES_SERVER):9200
          - name: JAEGER_AGENT_HOST   # NOTE: Point to the Agent daemon on the Node
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-query
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  spec:
    ports:
    - name: jaeger-query
      port: 80
      protocol: TCP
      targetPort: 16686
      # nodePort: 31380 # 節點暴露的端口
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
    type: NodePort
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    name: jaeger-agent
    namespace: tracing
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: agent
  spec:
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: agent
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "5778"
      spec:
        containers:
        - name: jaeger-agent
          image: jaegertracing/jaeger-agent:1.11.0
          args: ["--collector.host-port=jaeger-collector:14267"]
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
        hostNetwork: true
        dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-configuration
  namespace: tracing
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
data:
  span-storage-type: elasticsearch
  agent: |
    collector:
      host-port: "jaeger-collector:14267"
  sampling-strategies: |
    {
      "service_strategies": [
        {
          "service": "tl-services",
          "type": "probabilistic",
          "param": 0.5
        },
        {
          "service": "pt-calculator-v2",
          "type": "probabilistic",
          "param": 0.5
        }
      ],
      "default_strategy": {
        "type": "probabilistic",
        "param": 1
      }
    }
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pentium-jaeger-ingress
  namespace: tracing
spec:
  rules:
  - host: host-name
    http:
      paths:
      - backend:
          serviceName: jaeger-query
          servicePort: 80
        path: /tracing
  tls:
  - hosts:
    - host-name
    secretName: pentium-tls
