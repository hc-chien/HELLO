apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: fluentd
  namespace: monitor
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
    app: fluentd
spec:
  replicas: 1
#  updateStrategy:
#    rollingUpdate:
#      maxUnavailable: 10
#    type: RollingUpdate
  minReadySeconds: 0
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: dockerhub.pentium.network/master/pentium-fluentd:0.86.20190416195707
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
        #envFrom:
        #- configMapRef:
            #name: host-info
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: FLUENTD_ELASTICSEARCH_IP
          valueFrom:
            configMapKeyRef:
              name: host-info
              key: data01
        - name: FLUENTD_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENTD_CONTAINERS_LOG_PATH
          value: /var/log/containers/*_$(POD_NAMESPACE)-router-*.log,/var/log/containers/*$(POD_NAMESPACE)-openfaas-fn*.log,/var/log/containers/ofsm-runner-*_$(POD_NAMESPACE)_*.log,/var/log/containers/scripts-runner-*_$(POD_NAMESPACE)_*.log,/var/log/containers/scripts-service-*_$(POD_NAMESPACE)_*.log,/var/log/containers/workflows-eventhandler-*_$(POD_NAMESPACE)_*.log,/var/log/containers/scripts-installer-*_$(POD_NAMESPACE)_*.log,/var/log/containers/cloudkit-*_$(POD_NAMESPACE)_*.log,/var/log/containers/rbac-condition-constructor-*_$(POD_NAMESPACE)_*.log,/var/log/containers/cloudvm-manipulator-*_$(POD_NAMESPACE)_*.log,/var/log/containers/gateone-*_$(POD_NAMESPACE)_*.log,/var/log/containers/sftp-*_$(POD_NAMESPACE)_*.log,/var/log/containers/workflows-templateinstaller-*_$(POD_NAMESPACE)_*.log
        - name: FLUENTD_CONTAINERS_POS_FILE
          value: /var/log/fluentd-containers-$(POD_NAMESPACE).log.pos
        - name: FLUENTD_KAFKA_BROKERS
          value: kafka-0.kafka-svc:9092,kafka-1.kafka-svc:9092,kafka-2.kafka-svc:9092
        - name: FLUENTD_SCRIPTS_SERVICE_ENDPOINT_URL
          value: http://scripts-service.$(POD_NAMESPACE).svc.cluster.local/scripts/deployments
        - name: FLUENTD_WEBHOOKS_SYNCHRONIZATION_ENDPOINT_URL
          value: http://router.$(POD_NAMESPACE).svc.cluster.local/api/hosts/webhooks/synchronization
        - name: FLUENTD_SLACK_WEBHOOK_URL
          value: https://hooks.slack.com/services/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
        - name: FLUENTD_SLACK_CHANNEL
          value: "#fluentd-alert"
        - name: FLUENTD_SLACK_USERNAME
          value: fluentd
        - name: FLUENTD_SLACK_ICON_EMOJI
          value: ":crying_cat_face:"
        ports:
        - containerPort: 24224
        volumeMounts:
        - mountPath: /fluentd/etc/certs
          name: pn-fluentd-certs-config
        - mountPath: /etc/localtime
          name: time
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
      volumes:
      - name: pn-fluentd-certs-config
        secret:
          secretName: fluentd-certs
#        hostPath:
#          path: /opt/fluentd/data/certs
      - name: time
        hostPath:
          path: /etc/localtime
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
---
kind: Service
apiVersion: v1
metadata:
  name: fluentd
  namespace: monitor
spec:
  selector:
    app: fluentd
  ports:
  - protocol: TCP
    port: 34224
    targetPort: 24224
---
kind: Secret
metadata:
  name: fluentd-certs
type: Opaque
apiVersion: v1
data:
  fluentd.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lKQUlINmxoU1BVWFFiTUEwR0NTcUdTSWIzRFFFQkN3VUFNRUl4Q3pBSkJnTlYKQkFZVEFsaFlNUlV3RXdZRFZRUUhEQXhFWldaaGRXeDBJRU5wZEhreEhEQWFCZ05WQkFvTUUwUmxabUYxYkhRZwpRMjl0Y0dGdWVTQk1kR1F3SGhjTk1UZ3hNakEwTURrd05UTXlXaGNOTWpFeE1qQXpNRGt3TlRNeVdqQkNNUXN3CkNRWURWUVFHRXdKWVdERVZNQk1HQTFVRUJ3d01SR1ZtWVhWc2RDQkRhWFI1TVJ3d0dnWURWUVFLREJORVpXWmgKZFd4MElFTnZiWEJoYm5rZ1RIUmtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQQpydGhYdUlIL09DOUdvREQ5QWtxT3hkMXNoU2hlWWV0OXNaVEVNTkJ4OE5QT2w1MHFwRWRlTVVibWtxaUJ3V1NvCmV2b1pRbWloSXlMRjVSTGVBQ1IvckE5T2dXWEpMWW45K0FENG1nMXdYdEVxY2ZMN3QwVks0OUE4WUpIMElhQ3MKUWx3MFJ6cmVRNjBHcllBYlJpT3JaeDkzUXJPZ3JGVEtKMDEzL2c1SStNYVJuRG9JMUsvbEtuYmFpdllsRkhKRgpuZ1R5Zy9KV0lxSFJOUDBWbGNrU1NTdGx4azJ5dGRSY3Z3b01JeEtySlJ2ZDBxZ29vbVg0MTVObWRtdWhhYmxhCi9KY21sajRxSkw3cEtPMllFK0ZGQ2tnL3BoVFR0VHEya1hMZGdXdUswYkFmUTl1bmszanpjaFFVY3NSWG03amYKL2IzQVg2UXdOcTR1dnk2ZE80M1h2UUlEQVFBQm8xQXdUakFkQmdOVkhRNEVGZ1FVbGE1VERmcDl6azM1OHg0RApNMzQya25rMUxkMHdId1lEVlIwakJCZ3dGb0FVbGE1VERmcDl6azM1OHg0RE0zNDJrbmsxTGQwd0RBWURWUjBUCkJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWg3aUVZYnJrNjNFenJyMDZoMkR2ZmlzYkhhQy8KTHhrNTRmbzFyTnN4R0J1OGtnNFppSjdtcjJOakk4bDhGQ1k1SU5TRE9YZ3A1S3p3VGordngzNWF6MG9VSThqWgpYdGVqR1FxZkZ6c09kU01iTno4MGZWS2J4dmJOQXhvbVo1MTk2NFJWRFdsT3F0YkNPQjJUV0FMOHU2eVpFUTVYCjR4T0tyYitWSzZiT2RPZmcwbmZhTUpMb0JqS1FiSkJudWhlbzBXUHl4UVQzb0dFbk1FNzhwN3ZtMU9UbDh6MEEKMVZRMUpUT285dm42ZWJwRXNvbW04eWxGelJQdU1NN0NXUGpDNXMrNmdFMFBSYWNKeU85WE9nanVtUkdBeU9NegpPVHYxMEZYeTkzSVdsKytYOEMzMXljdm9vZzk4T0w2c1IyVS85QlhXUlFRMDFlUGkvaURKY0JxV3pRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  fluentd.key: LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlGRGpCQUJna3Foa2lHOXcwQkJRMHdNekFiQmdrcWhraUc5dzBCQlF3d0RnUUlBblVHR0Ztd0NiVUNBZ2dBCk1CUUdDQ3FHU0liM0RRTUhCQWhiUHJaZmgyWkhXUVNDQk1qWlVlWERxeUZrMDZUdmFUd2g0Sjl5SmM1dHVvOWEKNUVkdit2NTc0Wm1vbW4wSmRKOXNTdFdxTmFoOXpIc3lZNTN5TzFydDFjT3VtbUYvcnFsZmlmbEU1V0s5VW1UNApjdU9Lb2pQRTVtaTBJQnd0VFVUcnVVK0VPUGErMkd3YkVTVXczb3FpQzZGSmlsd1JWV2IvL2ZxR0lMSUNWUHB5CnJPTHBtaFVYVTNzajBlSnR3SEhkc0tRU1RUZWU2N1JTNkE1TE0rSWxCa3ozRi9KdzRPVXMxVmdqcTdJbjdUQ3QKdE5SQ3VvWVZTSnpaZjAzbm5TeEFTUDRuNGYveWFHZExlRWJaWk15NWJPRkdsQk11UHN1dVFrWHNwYnlSQWZtbgpLbUlJYlp5MTZ0MGZRb1RBbDl6U0NoeVJUWkx5YW1vajBMbWkvaS9QajJJaEpqemxObUxMS3lUWlVEMjNtREZTClJ2UUlBNW01cVpKakc0MjNvS2ZBSHFvdzBzamVuZk90TWdJRHZ1dVB2L2x2cXkwNWkzdkZ0N1lNMkVWUW9oVlYKVnYyL2cwRGRONDIyV21qc3RwMCtBc2pLRXlBSnRYZmNLQk5MUjBUaW5Kc1FnTjJ4OGt2MzRjUmxPM3lPeUdwcworTFl4YVdQeXpxNkRiQStXYnJFd09QSHNnYi9BNW42RDh2cklSUjdTWUVWRXN5Y2hUS0FRY0lzSEpnTDMwbytLCjdDeTA3MWRIczBWOC9VUk4yNXNwYjJVMGMwWHhIRFhWL2JHaUVQeUxNS2VQNFd3V0RxdXZYdTBrcWZUSzZPRnoKWEJIZzVlRHJPSEZxVHNwdnJKdG1tVk83bWhTWmJjSVUxK21xU0FERGFNS3QzOElnMngxRnUvVVUwdG5TZ3dZbQpQSHNpN29tSU11ZjNtR0ZmYmQ4NytiZmNYOTR4TmZHeW5pLzlaQ0tQU3ZSS3dyaTNYb04rMzdOaldsc0ozZmxxClBkVlpEV0grblNwWE9vMm8wUGpOVmRQZGNLTjllRlQvK3RrdmFyVmtzY0Rsb2VPMUoxOGVCTTFJbXgzc3NabC8KWFhYazA2NldNdjRGaVlHZG1VY3RhUFpuSnpmcEtqblBZZ3FJbm5tQVVvRVNsSkFIQmsvMHRQRHV1NXhlTXpaMQpBNHpvSGl6YmpZZ2VSL3dsS3hZOFJscmJkQVh0ek8wdDBLc0ZaZXN5TmZzb1VsMC9UYVFFdG1wY1hVYzJwaCtqCk5PTXZjdmdOazd2QjVQNkVVS21ZTWdXQUJEQjRrWmRQV3doRk5OL3lVT3RrRUJVUnVORmtJK3B4V1F6MitwV3IKd3l5K1RNS0U0RlB5K0MycVNKbHZzS3BNang2NVZRTEY2YnZOVy9FNEtGakZxcEt2eThIVVhQeXhGV2YvOXYyRApGdlp6N1R6cnhsQ0FiVHlxRzVjK2E4aEE0RG1hanl3cWpkMEZLMHZXa28wNjk0U01TTlZ5bkFnOUZuNkxGYzk3ClVUSGVNUUxqYWwrS1pJcHUrRFVWRFU0a0dxSll5TVUvVjB1UEJoTTRWWFM0ekxkZ0FVYXFTdUh2NWIza0pYS0IKK0p2M3lFNWN6Q3pOVGVldVE5dDBraEZmbkpxNG9JTFNkSjI5QVU2cXgvdVhzSFVEdUUrN0h0YVRCbkRtNURUego3WGFHRFlpWmYrTjRkL1Zvek0vRXJwTUc4TjkzdG1RUzdOejFXS1Y4ZWNYKzRvM1NmQ0ZOUG9GcmlyMVVlcmtICktMVXQ5RTBlb09haVhoK3drajdsaWZ2RkVTMjRnVjRUMTBPNFBLNlM5cm4xM3pjeXpkRDVCcS8xNEdhOVlGZysKOFM4Zk9sektORkJQRzgvcE85eXNqL2YxR0NZb1FHTTlZMG5YQnVNN1RDSTk1UUtCMXFaaGQ1ckdwKy9BT1lxQQpYaW41YktUNGxYNGltck15c0U4bEFaa2hRazAxRGgrbGJ4clVSZ3hBVk4wVzYwN096b2dIUFVCWG5VcVQrWFg1CjFpNUd1VVBhYXdic2hHMzZaNUpDbEpRUk9CK0QxajV3Qmdoc05CcngzWW1Vd05jMlVxcGZKYVpRakJhZE5WbkEKVWtMWHgzenB2QnB3TmpGQ3ZjaFk0cGVNazkwRENRdE9GVnRla0hSZ2R1YnhrRFBrWGtISEVKVFdjYUVxYkZ6LwpSRUE9Ci0tLS0tRU5EIEVOQ1JZUFRFRCBQUklWQVRFIEtFWS0tLS0tCg==
